# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build website'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .Net SDK'
      inputs:
        packageType: 'sdk'
        version: '5.0.100'
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
        noCache: true
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)  --no-restore'        
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*.Tests.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'wildconsultingweb'

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
  #- job: Deploy
    variables:
    - group: wildconsulting
    - name: System.Debug
      value: true
    strategy:
      runOnce:
        deploy:
          steps:
          #- script: echo $(ftp_server_url)
          - script: echo "ArtifactStagingDirectory:" $(Build.ArtifactStagingDirectory)
          - script: echo "agent.builddirectory:" $(agent.builddirectory)
          - script: echo "System.ArtifactsDirectory:" $(System.ArtifactsDirectory)
          - script: echo "Pipeline.Workspace:" $(Pipeline.Workspace)
          #- powershell: Get-ChildItem -Path $(Build.ArtifactStagingDirectory) -recurse
          #- download: current
          #  artifact: 'wildconsultingweb'
              #Downloaded wildconsultingweb/WildConsulting.WebSite.Core.zip to /home/vsts/work/1/wildconsultingweb/WildConsulting.WebSite.Core.zip
          - task: ExtractFiles@1
              displayName: 'Extract files'
              inputs:
              #archiveFilePatterns: "$(System.ArtifactsDirectory)/*.zip"
              archiveFilePatterns: '$(agent.builddirectory)/wildconsultingweb/*.zip'
              destinationFolder: '$(agent.builddirectory)'
              #Possibly use (here and below) destinationFolder: '$(Pipeline.Workspace)'
          - task: FtpUpload@2
              displayName: 'FTP Upload'
              inputs:
              credentialsOption: 'serviceEndpoint'
              serverEndpoint: 'wildconsulting_ftp'
              rootDirectory: '$(agent.builddirectory)'
              #rootDirectory: '$(System.ArtifactsDirectory)'
              remoteDirectory: /httpdocs/
              cleanContents: true
              preservePaths: true
   