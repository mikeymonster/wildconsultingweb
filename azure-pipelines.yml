# Build and deploy web site
#   Requres a service connection "wildconsulting_ftp" to the FTP target
# 
# https://subhankarsarkar.com/dot-net6-azure-web-app-deployment-using-azure-devops-pipeline/
#

trigger:
- master

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net9.0'
  dotNetVersion: '9.0.x'
  #targetRuntime: 'linux-x64'
  targetRuntime: 'win-x86'
  ftpServerEndpoint: 'wildconsulting_ftp'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build website'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .Net SDK'
      inputs:
        packageType: 'sdk'
        version: $(dotNetVersion)

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
        noCache: true

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)  --no-restore'        

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*.Tests.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish as self-contained application
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'   
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: Package and upload as a build artifact
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'wildconsultingweb'

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'wildconsulting-web-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: "$(agent.builddirectory)/**/*.zip"
              destinationFolder: '$(Pipeline.Workspace)/files'

          - task: FtpUpload@2
            displayName: 'FTP Upload'
            inputs:
              credentialsOption: 'serviceEndpoint'
              serverEndpoint: $(ftpServerEndpoint)
              rootDirectory: '$(Pipeline.Workspace)/files'
              remoteDirectory: /httpdocs/
              cleanContents: true
              preservePaths: true
   